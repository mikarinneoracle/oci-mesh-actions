# OCI CI test

name: OCI CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
      
jobs:
  tenancy-namespace:
    runs-on: ubuntu-latest
    name: Build and redeploy 
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      mesh_name: ${{ secrets.MESH_NAME }}
      mesh_compartment: ${{ secrets.MESH_COMPARTMENT_OCID }}
      dns_domain: ${{ secrets.DNS_DOMAIN }}
      ocir: ${{ secrets.OCIR }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      dbname: ${{ secrets.DBNAME }} 
      dbpassword: ${{ secrets.DBPASSWORD }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          
      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.3.1
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}

      - name: Get instantclient
        run: wget -q https://download.oracle.com/otn_software/linux/instantclient/217000/instantclient-basic-linux.x64-21.7.0.0.0dbru.zip
        
      - name: Login to OCIR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_SERVER }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build microservices
        run: sh build_services.sh ${dbname} ${dbpassword}
        
      - name: Delete deployments
        run: |
          kubectl delete deployment home-v1 -n ${mesh_name}
          kubectl delete deployment home-v2 -n ${mesh_name}
          kubectl delete deployment price-v1 -n ${mesh_name}
          # Sleep 10 seconds before microservices re-deployment in the next step
          sleep 10
      
      - name: Deploy microservices
        run: sh deploy_services.sh
        